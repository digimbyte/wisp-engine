[WinError 32] The process cannot access the file because it is being used by another process: 'X:\\SharedDropbox\\Dropbox\\Deans_stuff\\wisp-engine\\.pio\\build\\esp32-c6-lcd\\.cmake\\api\\v1\\reply' 
Please manually remove the file `X:\SharedDropbox\Dropbox\Deans_stuff\wisp-engine\.pio\build\esp32-c6-lcd\.cmake\api\v1\reply`
[WinError 32] The process cannot access the file because it is being used by another process: 'X:\\SharedDropbox\\Dropbox\\Deans_stuff\\wisp-engine\\.pio\\build\\esp32-c6-lcd\\.cmake\\api\\v1' 
Please manually remove the file `X:\SharedDropbox\Dropbox\Deans_stuff\wisp-engine\.pio\build\esp32-c6-lcd\.cmake\api\v1`
[WinError 145] The directory is not empty: 'X:\\SharedDropbox\\Dropbox\\Deans_stuff\\wisp-engine\\.pio\\build\\esp32-c6-lcd\\.cmake\\api' 
Please manually remove the file `X:\SharedDropbox\Dropbox\Deans_stuff\wisp-engine\.pio\build\esp32-c6-lcd\.cmake\api`
[WinError 145] The directory is not empty: 'X:\\SharedDropbox\\Dropbox\\Deans_stuff\\wisp-engine\\.pio\\build\\esp32-c6-lcd\\.cmake' 
Please manually remove the file `X:\SharedDropbox\Dropbox\Deans_stuff\wisp-engine\.pio\build\esp32-c6-lcd\.cmake`
[WinError 145] The directory is not empty: 'X:\\SharedDropbox\\Dropbox\\Deans_stuff\\wisp-engine\\.pio\\build\\esp32-c6-lcd' 
Please manually remove the file `X:\SharedDropbox\Dropbox\Deans_stuff\wisp-engine\.pio\build\esp32-c6-lcd`
[WinError 32] The process cannot access the file because it is being used by another process: 'X:\\SharedDropbox\\Dropbox\\Deans_stuff\\wisp-engine\\.pio\\build\\esp32-s3-spi' 
Please manually remove the file `X:\SharedDropbox\Dropbox\Deans_stuff\wisp-engine\.pio\build\esp32-s3-spi`
[WinError 32] The process cannot access the file because it is being used by another process: 'X:\\SharedDropbox\\Dropbox\\Deans_stuff\\wisp-engine\\.pio\\build' 
Please manually remove the file `X:\SharedDropbox\Dropbox\Deans_stuff\wisp-engine\.pio\build`
Can not remove temporary directory `X:\SharedDropbox\Dropbox\Deans_stuff\wisp-engine\.pio\build`. Please remove it manually to avoid build issues
Processing esp32-c6-lcd (platform: espressif32; board: esp32-c6-devkitm-1; framework: espidf)
--------------------------------------------------------------------------------
Verbose mode can be enabled via `-v, --verbose` option
CONFIGURATION: https://docs.platformio.org/page/boards/espressif32/esp32-c6-devkitm-1.html
PLATFORM: Espressif 32 (6.12.0) > Espressif ESP32-C6-DevKitM-1
HARDWARE: ESP32C6 160MHz, 320KB RAM, 4MB Flash
DEBUG: Current (cmsis-dap) External (cmsis-dap, esp-bridge, esp-builtin, esp-prog, iot-bus-jtag, jlink, minimodule, olimex-arm-usb-ocd, olimex-arm-usb-ocd-h, olimex-arm-usb-tiny-h, olimex-jtag-tiny, tumpa)
PACKAGES: 
 - framework-espidf @ 3.50500.0 (5.5.0) 
 - tool-cmake @ 3.30.2 
 - tool-esp-rom-elfs @ 0.0.1+20241011 
 - tool-esptoolpy @ 2.40900.0 (4.9.0) 
 - tool-idf @ 1.0.1 
 - tool-mconf @ 1.4060000.20190628 (406.0.0) 
 - tool-ninja @ 1.9.0 
 - tool-riscv32-esp-elf-gdb @ 11.2.0+20220823 
 - tool-xtensa-esp-elf-gdb @ 11.2.0+20230208 
 - toolchain-esp32ulp @ 1.23800.240113 (2.38.0) 
 - toolchain-riscv32-esp @ 14.2.0+20241119
Reading CMake configuration...
Generating assembly for certificate bundle...
LDF: Library Dependency Finder -> https://bit.ly/configure-pio-ldf
LDF Modes: Finder ~ chain, Compatibility ~ soft
Found 1 compatible libraries
Scanning dependencies...
Dependency Graph
|-- LovyanGFX @ 1.2.7
Building in release mode
Compiling .pio\build\esp32-c6-lcd\src\main.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\bootloader.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\engine\audio\namespace_bridge.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\engine\core\debug.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\engine\core\timing.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\engine\database\database_system_stub.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\engine\database\file_system.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\engine\database\legacy_system.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\engine\graphics\namespace_bridge.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\engine\minimal\minimal_engine.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\system\debug_esp32.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\system\esp32_compat.cpp.o
Compiling .pio\build\esp32-c6-lcd\src\system\esp32_serial.cpp.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\Fonts\IPA\lgfx_font_japan.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\Fonts\efont\lgfx_efont_cn.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\Fonts\efont\lgfx_efont_ja.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\Fonts\efont\lgfx_efont_kr.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\Fonts\efont\lgfx_efont_tw.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\utility\lgfx_miniz.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\utility\lgfx_pngle.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\utility\lgfx_qoi.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\utility\lgfx_qrcode.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\utility\lgfx_tjpgd.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\LGFXBase.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\LGFX_Button.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\LGFX_Sprite.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\lgfx_fonts.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\misc\DividedFrameBuffer.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\misc\SpriteBuffer.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\misc\common_function.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\misc\pixelcopy.o
src/engine/minimal/minimal_engine.cpp: In static member function 'static void WispEngine::Minimal::SimpleGraphics::drawPixel(int, int, uint16_t)':
src/engine/minimal/minimal_engine.cpp:36:13: error: request for member 'drawPixel' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
   36 |     display.drawPixel(x, y, color);
      |             ^~~~~~~~~
src/engine/minimal/minimal_engine.cpp: In static member function 'static void WispEngine::Minimal::SimpleGraphics::drawLine(int, int, int, int, uint16_t)':
src/engine/minimal/minimal_engine.cpp:40:13: error: request for member 'drawLine' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
   40 |     display.drawLine(x0, y0, x1, y1, color);
      |             ^~~~~~~~
src/engine/minimal/minimal_engine.cpp: In static member function 'static void WispEngine::Minimal::SimpleGraphics::drawRect(int, int, int, int, uint16_t)':
src/engine/minimal/minimal_engine.cpp:44:13: error: request for member 'drawRect' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
   44 |     display.drawRect(x, y, w, h, color);
      |             ^~~~~~~~
src/engine/minimal/minimal_engine.cpp: In static member function 'static void WispEngine::Minimal::SimpleGraphics::fillRect(int, int, int, int, uint16_t)':
src/engine/minimal/minimal_engine.cpp:48:13: error: request for member 'fillRect' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
   48 |     display.fillRect(x, y, w, h, color);
      |             ^~~~~~~~
src/engine/minimal/minimal_engine.cpp: In static member function 'static void WispEngine::Minimal::SimpleGraphics::drawText(int, int, const char*, uint16_t)':
src/engine/minimal/minimal_engine.cpp:52:13: error: request for member 'setTextColor' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
   52 |     display.setTextColor(color);
      |             ^~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:53:13: error: request for member 'setCursor' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
   53 |     display.setCursor(x, y);
      |             ^~~~~~~~~
src/engine/minimal/minimal_engine.cpp:54:13: error: request for member 'print' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
   54 |     display.print(text);
      |             ^~~~~
src/engine/minimal/minimal_engine.cpp: In static member function 'static void WispEngine::Minimal::SimpleGraphics::clear(uint16_t)':
src/engine/minimal/minimal_engine.cpp:96:13: error: request for member 'fillScreen' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
   96 |     display.fillScreen(color);
      |             ^~~~~~~~~~
src/engine/minimal/minimal_engine.cpp: In static member function 'static void WispEngine::Minimal::SimpleGraphics::renderSpriteFromSlot(uint8_t, int, int, uint8_t)':
src/engine/minimal/minimal_engine.cpp:164:33: error: request for member 'drawPixel' in 'WispEngine::Minimal::SimpleGraphics::display', which is of non-class type 'void()'
  164 |                         display.drawPixel(x + px * scale + sx, y + py * scale + sy, color);
      |                                 ^~~~~~~~~
src/engine/minimal/minimal_engine.cpp: In static member function 'static bool WispEngine::Minimal::Engine::init()':
src/engine/minimal/minimal_engine.cpp:268:25: error: 'uint16_t WispEngine::Minimal::SimpleGraphics::colorLUT [256]' is private within this context
  268 |         SimpleGraphics::colorLUT[i] = display.color565(gray, gray, gray);
      |                         ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:14:10: note: declared private here
   14 | uint16_t SimpleGraphics::colorLUT[256];
      |          ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:277:28: error: 'WispEngine::Minimal::SpriteSlot WispEngine::Minimal::SimpleGraphics::spriteSlots [24]' is private within this context
  277 |     memset(SimpleGraphics::spriteSlots, 0, sizeof(SimpleGraphics::spriteSlots));
      |                            ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:12:12: note: declared private here
   12 | SpriteSlot SimpleGraphics::spriteSlots[MAX_SPRITE_SLOTS];
      |            ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:277:67: error: 'WispEngine::Minimal::SpriteSlot WispEngine::Minimal::SimpleGraphics::spriteSlots [24]' is private within this context
  277 |     memset(SimpleGraphics::spriteSlots, 0, sizeof(SimpleGraphics::spriteSlots));
      |                                                                   ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:12:12: note: declared private here
   12 | SpriteSlot SimpleGraphics::spriteSlots[MAX_SPRITE_SLOTS];
      |            ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:278:21: error: 'uint8_t WispEngine::Minimal::SimpleGraphics::activeSpriteCount' is private within this context
  278 |     SimpleGraphics::activeSpriteCount = 0;
      |                     ^~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:15:9: note: declared private here
   15 | uint8_t SimpleGraphics::activeSpriteCount = 0;
      |         ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:279:21: error: 'uint8_t WispEngine::Minimal::SimpleGraphics::nextSlot' is private within this context
  279 |     SimpleGraphics::nextSlot = 0;
      |                     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:16:9: note: declared private here
   16 | uint8_t SimpleGraphics::nextSlot = 0;
      |         ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp: In static member function 'static void WispEngine::Minimal::Engine::printMemoryStats()':
src/engine/minimal/minimal_engine.cpp:309:50: error: 'WispEngine::Minimal::SpriteSlot WispEngine::Minimal::SimpleGraphics::spriteSlots [24]' is private within this context
  309 |     size_t spriteMemory = sizeof(SimpleGraphics::spriteSlots) + sizeof(SimpleGraphics::activeSprites) + sizeof(SimpleGraphics::colorLUT);
      |                                                  ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:12:12: note: declared private here
   12 | SpriteSlot SimpleGraphics::spriteSlots[MAX_SPRITE_SLOTS];
      |            ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:309:88: error: 'WispEngine::Minimal::SpriteInstance WispEngine::Minimal::SimpleGraphics::activeSprites [32]' is private within this context
  309 |     size_t spriteMemory = sizeof(SimpleGraphics::spriteSlots) + sizeof(SimpleGraphics::activeSprites) + sizeof(SimpleGraphics::colorLUT);
      |                                                                                        ^~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:13:16: note: declared private here
   13 | SpriteInstance SimpleGraphics::activeSprites[MAX_ACTIVE_SPRITES];
      |                ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:309:128: error: 'uint16_t WispEngine::Minimal::SimpleGraphics::colorLUT [256]' is private within this context
  309 |     size_t spriteMemory = sizeof(SimpleGraphics::spriteSlots) + sizeof(SimpleGraphics::activeSprites) + sizeof(SimpleGraphics::colorLUT);
      |                                                                                                                                ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:14:10: note: declared private here
   14 | uint16_t SimpleGraphics::colorLUT[256];
      |          ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:310:46: error: 'int16_t WispEngine::Minimal::SimpleAudio::monoBuffer [512]' is private within this context
  310 |     size_t audioMemory = sizeof(SimpleAudio::monoBuffer) + sizeof(SimpleAudio::dacBuffer);
      |                                              ^~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:19:9: note: declared private here
   19 | int16_t SimpleAudio::monoBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:310:80: error: 'uint8_t WispEngine::Minimal::SimpleAudio::dacBuffer [512]' is private within this context
  310 |     size_t audioMemory = sizeof(SimpleAudio::monoBuffer) + sizeof(SimpleAudio::dacBuffer);
      |                                                                                ^~~~~~~~~
src/engine/minimal/minimal_engine.cpp:20:9: note: declared private here
   20 | uint8_t SimpleAudio::dacBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
In file included from src/engine/minimal/../../system/esp32_common.h:21,
                 from src/engine/minimal/minimal_engine.h:4,
                 from src/engine/minimal/minimal_engine.cpp:2:
src/engine/minimal/minimal_engine.cpp:315:51: error: 'WispEngine::Minimal::SpriteSlot WispEngine::Minimal::SimpleGraphics::spriteSlots [24]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                   ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:194:178: note: in definition of macro 'ESP_LOG_LEVEL'
  194 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:12:12: note: declared private here
   12 | SpriteSlot SimpleGraphics::spriteSlots[MAX_SPRITE_SLOTS];
      |            ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:88: error: 'WispEngine::Minimal::SpriteInstance WispEngine::Minimal::SimpleGraphics::activeSprites [32]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                        ^~~~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:194:178: note: in definition of macro 'ESP_LOG_LEVEL'
  194 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:13:16: note: declared private here
   13 | SpriteInstance SimpleGraphics::activeSprites[MAX_ACTIVE_SPRITES];
      |                ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:127: error: 'uint16_t WispEngine::Minimal::SimpleGraphics::colorLUT [256]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                                                               ^~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:194:178: note: in definition of macro 'ESP_LOG_LEVEL'
  194 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:14:10: note: declared private here
   14 | uint16_t SimpleGraphics::colorLUT[256];
      |          ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:51: error: 'WispEngine::Minimal::SpriteSlot WispEngine::Minimal::SimpleGraphics::spriteSlots [24]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                   ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:195:178: note: in definition of macro 'ESP_LOG_LEVEL'
  195 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:12:12: note: declared private here
   12 | SpriteSlot SimpleGraphics::spriteSlots[MAX_SPRITE_SLOTS];
      |            ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:88: error: 'WispEngine::Minimal::SpriteInstance WispEngine::Minimal::SimpleGraphics::activeSprites [32]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                        ^~~~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:195:178: note: in definition of macro 'ESP_LOG_LEVEL'
  195 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:13:16: note: declared private here
   13 | SpriteInstance SimpleGraphics::activeSprites[MAX_ACTIVE_SPRITES];
      |                ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:127: error: 'uint16_t WispEngine::Minimal::SimpleGraphics::colorLUT [256]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                                                               ^~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:195:178: note: in definition of macro 'ESP_LOG_LEVEL'
  195 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:14:10: note: declared private here
   14 | uint16_t SimpleGraphics::colorLUT[256];
      |          ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:51: error: 'WispEngine::Minimal::SpriteSlot WispEngine::Minimal::SimpleGraphics::spriteSlots [24]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                   ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:196:178: note: in definition of macro 'ESP_LOG_LEVEL'
  196 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:12:12: note: declared private here
   12 | SpriteSlot SimpleGraphics::spriteSlots[MAX_SPRITE_SLOTS];
      |            ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:88: error: 'WispEngine::Minimal::SpriteInstance WispEngine::Minimal::SimpleGraphics::activeSprites [32]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                        ^~~~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:196:178: note: in definition of macro 'ESP_LOG_LEVEL'
  196 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:13:16: note: declared private here
   13 | SpriteInstance SimpleGraphics::activeSprites[MAX_ACTIVE_SPRITES];
      |                ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:127: error: 'uint16_t WispEngine::Minimal::SimpleGraphics::colorLUT [256]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                                                               ^~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:196:178: note: in definition of macro 'ESP_LOG_LEVEL'
  196 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:14:10: note: declared private here
   14 | uint16_t SimpleGraphics::colorLUT[256];
      |          ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:51: error: 'WispEngine::Minimal::SpriteSlot WispEngine::Minimal::SimpleGraphics::spriteSlots [24]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                   ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:197:178: note: in definition of macro 'ESP_LOG_LEVEL'
  197 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:12:12: note: declared private here
   12 | SpriteSlot SimpleGraphics::spriteSlots[MAX_SPRITE_SLOTS];
      |            ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:88: error: 'WispEngine::Minimal::SpriteInstance WispEngine::Minimal::SimpleGraphics::activeSprites [32]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                        ^~~~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:197:178: note: in definition of macro 'ESP_LOG_LEVEL'
  197 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:13:16: note: declared private here
   13 | SpriteInstance SimpleGraphics::activeSprites[MAX_ACTIVE_SPRITES];
      |                ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:127: error: 'uint16_t WispEngine::Minimal::SimpleGraphics::colorLUT [256]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                                                               ^~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:197:178: note: in definition of macro 'ESP_LOG_LEVEL'
  197 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:14:10: note: declared private here
   14 | uint16_t SimpleGraphics::colorLUT[256];
      |          ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:51: error: 'WispEngine::Minimal::SpriteSlot WispEngine::Minimal::SimpleGraphics::spriteSlots [24]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                   ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:198:178: note: in definition of macro 'ESP_LOG_LEVEL'
  198 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:12:12: note: declared private here
   12 | SpriteSlot SimpleGraphics::spriteSlots[MAX_SPRITE_SLOTS];
      |            ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:88: error: 'WispEngine::Minimal::SpriteInstance WispEngine::Minimal::SimpleGraphics::activeSprites [32]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                        ^~~~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:198:178: note: in definition of macro 'ESP_LOG_LEVEL'
  198 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:13:16: note: declared private here
   13 | SpriteInstance SimpleGraphics::activeSprites[MAX_ACTIVE_SPRITES];
      |                ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:315:127: error: 'uint16_t WispEngine::Minimal::SimpleGraphics::colorLUT [256]' is private within this context
  315 |              spriteMemory, sizeof(SimpleGraphics::spriteSlots), sizeof(SimpleGraphics::activeSprites), sizeof(SimpleGraphics::colorLUT));
      |                                                                                                                               ^~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:198:178: note: in definition of macro 'ESP_LOG_LEVEL'
  198 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:314:5: note: in expansion of macro 'ESP_LOGI'
  314 |     ESP_LOGI("MinimalEngine", "Sprite System: %d bytes (slots: %d, instances: %d, LUT: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:14:10: note: declared private here
   14 | uint16_t SimpleGraphics::colorLUT[256];
      |          ^~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:47: error: 'int16_t WispEngine::Minimal::SimpleAudio::monoBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                               ^~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:194:178: note: in definition of macro 'ESP_LOG_LEVEL'
  194 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:19:9: note: declared private here
   19 | int16_t SimpleAudio::monoBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:80: error: 'uint8_t WispEngine::Minimal::SimpleAudio::dacBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                                                                ^~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:194:178: note: in definition of macro 'ESP_LOG_LEVEL'
  194 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:20:9: note: declared private here
   20 | uint8_t SimpleAudio::dacBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:47: error: 'int16_t WispEngine::Minimal::SimpleAudio::monoBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                               ^~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:195:178: note: in definition of macro 'ESP_LOG_LEVEL'
  195 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:19:9: note: declared private here
   19 | int16_t SimpleAudio::monoBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:80: error: 'uint8_t WispEngine::Minimal::SimpleAudio::dacBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                                                                ^~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:195:178: note: in definition of macro 'ESP_LOG_LEVEL'
  195 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:20:9: note: declared private here
   20 | uint8_t SimpleAudio::dacBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:47: error: 'int16_t WispEngine::Minimal::SimpleAudio::monoBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                               ^~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:196:178: note: in definition of macro 'ESP_LOG_LEVEL'
  196 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:19:9: note: declared private here
   19 | int16_t SimpleAudio::monoBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:80: error: 'uint8_t WispEngine::Minimal::SimpleAudio::dacBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                                                                ^~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:196:178: note: in definition of macro 'ESP_LOG_LEVEL'
  196 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:20:9: note: declared private here
   20 | uint8_t SimpleAudio::dacBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:47: error: 'int16_t WispEngine::Minimal::SimpleAudio::monoBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                               ^~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:197:178: note: in definition of macro 'ESP_LOG_LEVEL'
  197 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:19:9: note: declared private here
   19 | int16_t SimpleAudio::monoBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:80: error: 'uint8_t WispEngine::Minimal::SimpleAudio::dacBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                                                                ^~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:197:178: note: in definition of macro 'ESP_LOG_LEVEL'
  197 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:20:9: note: declared private here
   20 | uint8_t SimpleAudio::dacBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:47: error: 'int16_t WispEngine::Minimal::SimpleAudio::monoBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                               ^~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:198:178: note: in definition of macro 'ESP_LOG_LEVEL'
  198 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:19:9: note: declared private here
   19 | int16_t SimpleAudio::monoBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:317:80: error: 'uint8_t WispEngine::Minimal::SimpleAudio::dacBuffer [512]' is private within this context
  317 |              audioMemory, sizeof(SimpleAudio::monoBuffer), sizeof(SimpleAudio::dacBuffer));
      |                                                                                ^~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:198:178: note: in definition of macro 'ESP_LOG_LEVEL'
  198 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag __VA_OPT__(,) __VA_ARGS__); } \
      |                                                                                                                                                                                  ^~~~~~~~~~~
C:/Users/digimbyte/.platformio/packages/framework-espidf/components/log/include/esp_log.h:79:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
   79 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format __VA_OPT__(,) __VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
src/engine/minimal/minimal_engine.cpp:316:5: note: in expansion of macro 'ESP_LOGI'
  316 |     ESP_LOGI("MinimalEngine", "Audio System: %d bytes (mono: %d, dac: %d)",
      |     ^~~~~~~~
src/engine/minimal/minimal_engine.cpp:20:9: note: declared private here
   20 | uint8_t SimpleAudio::dacBuffer[AUDIO_BUFFER_SIZE_MONO];
      |         ^~~~~~~~~~~
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\panel\Panel_Device.o
Compiling .pio\build\esp32-c6-lcd\lib995\LovyanGFX\lgfx\v1\panel\Panel_EPDiy.o
*** [.pio\build\esp32-c6-lcd\src\engine\minimal\minimal_engine.cpp.o] Error 1
========================= [FAILED] Took 41.54 seconds =========================

Environment    Status    Duration
-------------  --------  ------------
esp32-c6-lcd   FAILED    00:00:41.538
==================== 1 failed, 0 succeeded in 00:00:41.538 ====================
